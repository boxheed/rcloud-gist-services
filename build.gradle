/*******************************************************************************
* Copyright (c) 2017 AT&T Intellectual Property, [http://www.att.com]
*
* SPDX-License-Identifier:   MIT
*
*******************************************************************************/

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE'
//        classpath 'io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.28.0'
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:8.2.0'
        classpath 'com.netflix.nebula:gradle-info-plugin:7.1.3'
        classpath 'com.netflix.nebula:nebula-project-plugin:7.0.7'
        classpath 'gradle.plugin.com.github.jk1:gradle-license-report:1.3'
        classpath 'com.fizzpod:gradle-sweeney-plugin:4.2.0'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.11.0'
    }
}

apply plugin: 'com.fizzpod.sweeney'
apply plugin: "pl.allegro.tech.build.axion-release"
apply plugin: 'com.github.ben-manes.versions'

sweeney {
  enforce 'jdk:[11,)'
  enforce 'gradle:[6.2.2,)'
  validate()
}

scmVersion {
    tag {
        prefix = 'release'
    }
}

allprojects {
    repositories {
      jcenter()
      mavenCentral()
    }
    group = 'com.mangosolutions.rcloud'
    project.version = scmVersion.version
    ext.projectUrl = "https://github.com/MangoTheCat/rcloud-gist-services"
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'groovy'
  apply plugin: "io.spring.dependency-management"
  apply plugin: 'eclipse'
  apply plugin: 'nebula.info'
  apply plugin: 'nebula.integtest'
  apply plugin: 'maven'
  apply plugin: 'maven-publish'



  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  dependencyManagement {
    imports {
      mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Hoxton.SR3'
      mavenBom 'org.springframework.boot:spring-boot-starter-parent:2.2.5.RELEASE'
      
    }
  }

  //Exclude the log4j dependencies as will use logback
  configurations {
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude module: "spring-boot-starter-tomcat"
  }

  test {
    testLogging.showStandardStreams = true
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
      classifier = 'sources'
      from sourceSets.main.allSource
  }

  tasks.withType(JavaExec) {
    if (Boolean.getBoolean('DEBUG')) {
      jvmArgs '-Xdebug',  '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000'
    }
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
      classifier = 'javadoc'
      from javadoc.destinationDir
  }

  artifacts {
      archives sourcesJar
      archives javadocJar
  }

  project.tasks.findAll {
    it.name.startsWith("publish")
  }.each {
    it.dependsOn assemble
  }


}

configure(subprojects.findAll {it.name =~ /.*service/}) {

  apply plugin: 'org.springframework.boot'
  apply plugin: 'nebula.ospackage'

  bootJar {
    launchScript()
  }

  dependencies {
    compile("org.springframework.boot:spring-boot-starter-undertow:2.2.5.RELEASE")
  }

  processResources {
      filesMatching('config/application.yml') { expand (project.properties) }
  }

  artifacts {
    archives buildRpm
  }

  task distRpm(type: Rpm, dependsOn: bootJar) {}

  task distDeb(type: Deb, dependsOn: bootJar) {}

  assemble.dependsOn distRpm

  assemble.dependsOn distDeb


}
