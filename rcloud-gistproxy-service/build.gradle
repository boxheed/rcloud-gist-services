/*******************************************************************************
* Copyright (c) 2017 AT&T Intellectual Property, [http://www.att.com]
*
* SPDX-License-Identifier:   MIT
*
*******************************************************************************/

project.description = "RCloud Gist service providing gist access api."

dependencies {
  compile 'org.springframework.boot:spring-boot-starter'
  compile 'org.springframework.boot:spring-boot-starter-actuator'
  compile 'org.springframework.boot:spring-boot-starter-security'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.cloud:spring-cloud-starter'
  compile 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
  compile 'com.eclipsesource.minimal-json:minimal-json:0.9.5'

  compile 'org.apache.commons:commons-lang3:3.9'
  compile 'com.netflix.netflix-commons:netflix-commons-util:0.3.0'
  compile 'commons-io:commons-io:2.6'


  testCompile 'junit:junit:4.11'
  testCompile 'org.mockito:mockito-all:1.10.8'
  testCompile 'org.springframework.boot:spring-boot-starter-test'

}


ext.pkg = [:]
  pkg.name = archivesBaseName
  pkg.installPath = '/opt/' + pkg.name
  pkg.jarName = archivesBaseName + '-' + project.version + '.jar'
  pkg.jarPath = pkg.installPath + '/' + pkg.jarName
  pkg.initPath = '/etc/init.d/' + archivesBaseName
  pkg.description = project.description
  pkg.summary = "RCloud Gist Proxy Service"
  pkg.vendor = "Mango Solutions Ltd."
  pkg.url = projectUrl
  pkg.buildId = new Date().format('yyyyMMddHHmmss')
  pkg.version = project.version.replaceAll("-", ".")
  pkg.user = 'rcloudgistservice'
  pkg.group = pkg.user

ospackage {
    packageName = pkg.name
    version = pkg.version
    release = pkg.buildId
    os = LINUX
    user = pkg.user
    group = pkg.group
    summary = pkg.summary
    vendor = pkg.vendor
    packageDescription = pkg.description
    url = pkg.url
    type = BINARY

    //create user and group
    preInstall "/usr/sbin/useradd -c \"$pkg.summary\" -r -d $pkg.installPath $pkg.user 2>/dev/null || :"

    //create log directory
    preInstall "mkdir -p /var/log/$pkg.name && chown $pkg.user:root /var/log/$pkg.name"

    into(pkg.installPath)

    from(jar.outputs.files) {
        fileMode 0770
    }

    from('src/main/pkg/home') {
        fileType CONFIG | NOREPLACE
        filter (org.apache.tools.ant.filters.ReplaceTokens, tokens: pkg )
        rename { String fileName ->
            if(fileName.equals("service.conf")) {
                fileName.replace('service', project.name + "-" + project.version)
            } else if(fileName.equals("systemd.service")) {
                fileName.replace('systemd', pkg.name)
            } else {
                fileName
            }
        }
        fileMode 0660
    }
    //systemv symlink
    link(pkg.initPath, pkg.jarPath)
    //The following link is for systemd based systems, at the moment the above systemv symlink will suffice
    //link("/etc/systemd/system/" + pkg.name + ".service", pkg.installPath + "/" + pkg.name + ".service")
}
